@model IEnumerable<SmartDb4.Models.Project>

@{
    ViewBag.Title = "Project";
}

<div class="pagelayout">
    <div class="inline-display">
        <div class="manageproject"></div>
        <div class="manageprojectHeader"><h3>Manage Project</h3></div>
    </div>
            <div>
        <div class="pull-left">
            <div class="triangleRight" style="float:right;border-color: #FFF #FFF #FFF #6085c6 !important;"></div>
            <div class="rectangle" style="float:right;background: #6085c6 !important">@Html.ActionLink("Project", "Index", null, new { style = "color:white;text-decoration: none"})</div>
        </div>
    </div>
    <div style="clear: both;height:20px;"></div>
    @*<ol class="breadcrumb">
        <li>
            @Html.ActionLink("Project", "Index")
        </li>
    </ol>*@
    @{
        if(ViewBag.Error != null)
        {
            <div class="alert alert-danger alert-dismissable">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <strong>Error!</strong> @ViewBag.Error
            </div>
        }
        <div class="alert alert-danger alert-dismissable hide" id="deleteAlert">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <div id="errMsg"></div>
        </div>
    }


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-sm-10">
                        <div class="input-group margin-left1">
                            @Html.TextBox("SearchString", null, new {@placeholder = "find by project name ", @class = "form-control"})
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="submit">Search</button>
                            </span>
                        </div>
                    </div>
                    <div class="col-sm-2">
                        <div class="input-group">
                            <span class="input-group-btn">
                                <button class="btn btn-default" type="button" onclick=" window.location.href = '@Url.Action("Create", "Project")'">
                                    <span class="glyphicon glyphicon-plus"></span> Create
                                </button>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-striped table-hover">
                <tr>
                    <th>
                        @Html.ActionLink("Project Name", "Index", new {sortOrder = ViewBag.NameSortParm})
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.StartDate)
                    </th>
                    <th class="hidden-xs hidden-sm ">
                        @Html.DisplayNameFor(model => model.EndDate)
                    </th>
                    <th class="hidden-xs">
                        @Html.DisplayNameFor(model => model.MaxNoOfParticipants)
                    </th>
                    <th class="hidden-xs">
                        @Html.DisplayNameFor(model => model.Classification.ClassificationName)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProjectName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StartDate)
                        </td>
                        <td class="hidden-xs hidden-sm">
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td class="hidden-xs">
                            @Html.DisplayFor(modelItem => item.MaxNoOfParticipants)
                        </td>
                        <td class="hidden-xs">
                            @Html.DisplayFor(modelItem => item.Classification.ClassificationName)
                        </td>
                        <td>
                            <div class="btn-group">
                                <button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown">
                                    Action <span class="caret"></span>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    @if (item.CanEdit)
                                    {
                                        <li class="executeAction cursor" data-url='@Url.Action("Edit", new {id = item.ProjectId})'>
                                            <a href="#">
                                                <i  style="padding-right: 5px;" class="fa fa-pencil-square-o"></i>
                                                Edit
                                            </a>
                                            @*<div class="padding-left5p">
                                                <img src="~/Content/images/27_edit_text.png" alt="edit" width="25" height="25" />
                                                <span class="padding-left10p">Edit</span>
                                            </div>*@
                                        </li>
                                    }
                                    <li class="showdetails cursor" data-url='@Url.Action("Details", new {id = item.ProjectId})'>
                                        <a href="#">
                                            <i  style="padding-right: 5px;" class="fa fa-list-ul"></i>
                                            Details
                                        </a>
                                    </li>
                                    <li class="executeAction cursor"  data-url='@Url.Action("AssignMembers", new {id = item.ProjectId})'>
                                         <a href="#">
                                            <i  style="padding-right: 5px;" class="fa fa-user"></i>
                                            Assign Members
                                        </a>
                                    </li>
                                    @if (item.CanEdit)
                                    {
                                        <li class="divider"></li>
                                        <li class="alert123 cursor" id="@item.ProjectId" data-url='@Url.Action("Delete", new {id = item.ProjectId})'>
                                             <a href="#">
                                                <i  style="padding-right: 5px;" class="fa fa-trash-o"></i>
                                                Delete
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        </div>
   
    }
</div>


<div id='dialogDiv' class='modal hide fade in'>
    <div id='dialogContent'>
    </div>
</div>
    
    
<script type="text/javascript">
    $(document).on("click", ".alert123", function (e) {

        var urlToExec = $(this).data('url');
        bootbox.confirm("Are you sure you want to delete this record?", function (result) {
            if (result) {

                var token = $('input[name="__RequestVerificationToken"]').val();
                var tokenadr = $('form[action="' + urlToExec + '"] input[name="__RequestVerificationToken"]').val();

                var headers = {};
                var headersadr = {};

                headers['__RequestVerificationToken'] = token;
                headersadr['__RequestVerificationToken'] = tokenadr;

                $.ajax({
                    type: "POST",
                    url: urlToExec,
                    data: "__RequestVerificationToken=" + token,
                    success: function (data) {
                        if (data.Ok == true) {
                            window.location.href = "@Url.Action("Index")";
                        }
                        else {
                            //show error
                            //debugger;
                            $('#deleteAlert').removeClass('hide');
                            $('#errMsg').html("<strong>Error!</strong> " + data.ErrorMessage);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Delete Failed -> ' + errorThrown);
                    }
                });
                
            }
        });
    });

    $(document).ready(function () {
        $(document).on("click", ".showdetails", function (e) {               

            var url = $('#gameModal').data('url');
            var urlToExec = $(this).data('url');
            $.get(urlToExec, function (data) {
                bootbox.dialog({
                    message: data,
                    title: "Details",
                    buttons: {
                        main: {
                            label: "Ok",
                            className: "btn-primary",
                            callback: function () {
                            }
                        }
                    }
                });

            });
        });

        $(document).on("click", ".executeAction", function (e) {
            var urlToExec = $(this).data('url');
            window.location = urlToExec;
        });

       
    });
</script>